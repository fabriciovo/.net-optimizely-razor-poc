@using Newtonsoft.Json
@using razor_poc.Models.ViewModels
@model Hero3DBlockViewModel

<div class="3dModel-block">
    <h3>@Model.Title</h3>

    <canvas id="threejs-container"></canvas>

    <script type="importmap">
        {
            "imports": {
                "three": "https://unpkg.com/three@0.160.0/build/three.module.js",
                "three/addons/": "https://unpkg.com/three@0.160.0/examples/jsm/"
            }
        }
    </script>

    <script type="module">
        import * as THREE from 'three';
        import { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';
        var model, mixer;
        var clock = new THREE.Clock();
        var scene = new THREE.Scene();
        var camera = new THREE.PerspectiveCamera(75, window.innerWidth / 640, 0.1, 1000);
        camera.position.z = 5;
        scene.add(new THREE.HemisphereLight(0x606060, 0x404040));
        
        var renderer = new THREE.WebGLRenderer({
            canvas: document.getElementById("threejs-container"),
            antialias: true,
            alpha: true,
        });
        renderer.setSize(window.innerWidth, 640);
        window.addEventListener("resize", resize);
        var light = new THREE.DirectionalLight(0xffffff);
        light.position.set(1, 1, 1).normalize();
        scene.add(light);


        var gltfLoader = new GLTFLoader();

        gltfLoader.load('@Model.Model3D.Href', function (gltf) {
            model = gltf.scene;
            model.scale.set(0.03, 0.03, 0.03);
            scene.add(model);

            mixer = new THREE.AnimationMixer(gltf.scene);

            gltf.animations.forEach((clip) => {

                mixer.clipAction(clip).play();

            });


            console.log('@Model.Model3D.Href loaded!');
        }, undefined, function (error) {
            console.error(error);
        });

        function resize() {
            camera.aspect = window.innerWidth / 640;
            camera.updateProjectionMatrix();
            renderer.setSize(window.innerWidth, 640);
        }

        function animate() {

            var delta = clock.getDelta();

            if (mixer) mixer.update(delta);

            if (model) {
                model.rotation.y += 0.01;
            }

            requestAnimationFrame(animate);
            renderer.render(scene, camera);

        }

        animate();
    </script>
</div>
